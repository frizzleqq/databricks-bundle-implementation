[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dbx_example"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Florian Fritz", email = "todo@test.com" }
]
requires-python = ">=3.12"
urls.homepage = "todo"

# Roughly based on Databricks runtime 16.3
# https://docs.databricks.com/aws/en/release-notes/serverless/#version-163
dependencies = [
    "databricks-sdk==0.57.0",
    "delta-spark>=3.3.0, <4.0.0",
    "pydantic~=2.8.0",
    "pyspark>=3.5.0, <4.0.0",
]

[project.scripts]
dbx-example = "dbx_example.cli:main"

[project.optional-dependencies]
dev = [
    "databricks-bundles~=0.260.0", # For Python-based Workflows
    "hatch",
    "mypy", # Type hints
    "pip", # Databricks extension needs it
    "pytest", # Unit testing
    "ruff", # Linting/Formatting
]
connect = [
    # alternatively use databricks-connect plugin to install
    "databricks-connect~=16.3.0",
]

[tool.hatch.envs.default]
installer = "uv"

[tool.hatch.build]
sources = ["."]
include = ["dbx_example*"]

[tool.hatch.envs.default.scripts]
check = [
    "ruff check",
    "ruff format --check",
]
fix = [
    "ruff check --fix",
    "ruff format",
]
test = "pytest -v"

[[tool.mypy.overrides]]
ignore_missing_imports = true

[tool.ruff]
line-length = 100
include = [
    "pyproject.toml",
    "dbx_example/**/*.py",
    "resources/**/*.py",
    "tests/**/*.py",
    "notebooks/**/*.py",
]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
exclude = ["notebooks/**/*.py"]
select = [
  "E", # pycodestyle
  "W", # pycodestyle
  "F", # Pyflakes
  "I", # isort
]
ignore = [
  "E501", # Line length is regulated by formatter
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.black]
# This is only for Notebooks within Databricks Workspace and not used in Python project.
line-length = 100
target-version = ['py312']

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = [
    "tests",
]
